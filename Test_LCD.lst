CCS PCM C Compiler, Version 5.015, 5967               27-Mar-19 22:29

               Filename:   D:\DoAn1\Test_LCD.lst

               ROM used:   973 words (12%)
                           Largest free fragment is 2048
               RAM used:   17 (5%) at main() level
                           27 (7%) worst case
               Stack used: 3 locations
               Stack size: 8

*
0000:  MOVLW  03
0001:  MOVWF  0A
0002:  GOTO   311
0003:  NOP
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  07
0009:  RETLW  0F
000A:  RETLW  1F
000B:  RETLW  1F
000C:  RETLW  1F
000D:  RETLW  1F
000E:  RETLW  1F
000F:  RETLW  1F
0010:  RETLW  1F
0011:  RETLW  1F
0012:  RETLW  1F
0013:  RETLW  00
0014:  RETLW  00
0015:  RETLW  00
0016:  RETLW  00
0017:  RETLW  00
0018:  RETLW  1C
0019:  RETLW  1E
001A:  RETLW  1F
001B:  RETLW  1F
001C:  RETLW  1F
001D:  RETLW  1F
001E:  RETLW  1F
001F:  RETLW  1F
0020:  RETLW  00
0021:  RETLW  00
0022:  RETLW  00
0023:  RETLW  00
0024:  RETLW  00
0025:  RETLW  1F
0026:  RETLW  1F
0027:  RETLW  1F
0028:  RETLW  1F
0029:  RETLW  1F
002A:  RETLW  1F
002B:  RETLW  1F
002C:  RETLW  1F
002D:  RETLW  1F
002E:  RETLW  1E
002F:  RETLW  1C
0030:  RETLW  1F
0031:  RETLW  1F
0032:  RETLW  1F
0033:  RETLW  1F
0034:  RETLW  1F
0035:  RETLW  1F
0036:  RETLW  0F
0037:  RETLW  07
0038:  RETLW  1F
0039:  RETLW  1F
003A:  RETLW  1F
003B:  RETLW  00
003C:  RETLW  00
003D:  RETLW  00
003E:  RETLW  1F
003F:  RETLW  1F
0040:  RETLW  1F
0041:  RETLW  1F
0042:  RETLW  1F
0043:  RETLW  1F
0044:  RETLW  1F
0045:  RETLW  1F
0046:  RETLW  1F
0047:  RETLW  1F
0048:  DATA F3,34
0049:  DATA 6E,34
004A:  DATA 00,00
004B:  DATA E8,30
004C:  DATA 00,01
004D:  DATA E4,39
004E:  DATA 61,32
004F:  DATA 00,15
*
00C4:  MOVF   0B,W
00C5:  MOVWF  2C
00C6:  BCF    0B.7
00C7:  BSF    03.5
00C8:  BSF    03.6
00C9:  BSF    0C.7
00CA:  BSF    0C.0
00CB:  NOP
00CC:  NOP
00CD:  BCF    03.5
00CE:  BCF    03.6
00CF:  BTFSC  2C.7
00D0:  BSF    0B.7
00D1:  BSF    03.6
00D2:  MOVF   0C,W
00D3:  ANDLW  7F
00D4:  BTFSC  03.2
00D5:  GOTO   118
00D6:  BCF    03.6
00D7:  MOVWF  2C
00D8:  BSF    03.6
00D9:  MOVF   0D,W
00DA:  BCF    03.6
00DB:  MOVWF  2D
00DC:  BSF    03.6
00DD:  MOVF   0F,W
00DE:  BCF    03.6
00DF:  MOVWF  2E
00E0:  MOVF   2C,W
00E1:  MOVWF  2F
00E2:  CALL   085
00E3:  MOVF   2D,W
00E4:  BSF    03.6
00E5:  MOVWF  0D
00E6:  BCF    03.6
00E7:  MOVF   2E,W
00E8:  BSF    03.6
00E9:  MOVWF  0F
00EA:  BCF    03.6
00EB:  MOVF   0B,W
00EC:  MOVWF  2F
00ED:  BCF    0B.7
00EE:  BSF    03.5
00EF:  BSF    03.6
00F0:  BSF    0C.7
00F1:  BSF    0C.0
00F2:  NOP
00F3:  NOP
00F4:  BCF    03.5
00F5:  BCF    03.6
00F6:  BTFSC  2F.7
00F7:  BSF    0B.7
00F8:  BSF    03.6
00F9:  RLF    0C,W
00FA:  RLF    0E,W
00FB:  ANDLW  7F
00FC:  BTFSC  03.2
00FD:  GOTO   118
00FE:  BCF    03.6
00FF:  MOVWF  2C
0100:  BSF    03.6
0101:  MOVF   0D,W
0102:  BCF    03.6
0103:  MOVWF  2D
0104:  BSF    03.6
0105:  MOVF   0F,W
0106:  BCF    03.6
0107:  MOVWF  2E
0108:  MOVF   2C,W
0109:  MOVWF  2F
010A:  CALL   085
010B:  MOVF   2D,W
010C:  BSF    03.6
010D:  MOVWF  0D
010E:  BCF    03.6
010F:  MOVF   2E,W
0110:  BSF    03.6
0111:  MOVWF  0F
0112:  INCF   0D,F
0113:  BTFSC  03.2
0114:  INCF   0F,F
0115:  BCF    03.6
0116:  GOTO   0C4
0117:  BSF    03.6
0118:  BCF    03.6
0119:  RETURN
*
02EC:  MOVF   2C,W
02ED:  XORWF  2D,W
02EE:  ANDLW  80
02EF:  MOVWF  2F
02F0:  BTFSS  2C.7
02F1:  GOTO   2F4
02F2:  COMF   2C,F
02F3:  INCF   2C,F
02F4:  BTFSS  2D.7
02F5:  GOTO   2F8
02F6:  COMF   2D,F
02F7:  INCF   2D,F
02F8:  MOVF   2D,W
02F9:  CLRF   78
02FA:  SUBWF  2C,W
02FB:  BTFSC  03.0
02FC:  GOTO   300
02FD:  MOVF   2C,W
02FE:  MOVWF  77
02FF:  GOTO   30C
0300:  CLRF   77
0301:  MOVLW  08
0302:  MOVWF  2E
0303:  RLF    2C,F
0304:  RLF    77,F
0305:  MOVF   2D,W
0306:  SUBWF  77,W
0307:  BTFSC  03.0
0308:  MOVWF  77
0309:  RLF    78,F
030A:  DECFSZ 2E,F
030B:  GOTO   303
030C:  BTFSS  2F.7
030D:  GOTO   310
030E:  COMF   78,F
030F:  INCF   78,F
0310:  RETURN
....................  
.................... #list 
....................  
.................... #FUSES NOWDT, HS, NOPUT, NOPROTECT, NODEBUG, NOBROWNOUT, NOLVP, NOCPD, NOWRT 
.................... #use delay(CLOCK=20MHz)  
*
0071:  MOVLW  2D
0072:  MOVWF  04
0073:  BCF    03.7
0074:  MOVF   00,W
0075:  BTFSC  03.2
0076:  GOTO   084
0077:  MOVLW  06
0078:  MOVWF  78
0079:  CLRF   77
007A:  DECFSZ 77,F
007B:  GOTO   07A
007C:  DECFSZ 78,F
007D:  GOTO   079
007E:  MOVLW  7B
007F:  MOVWF  77
0080:  DECFSZ 77,F
0081:  GOTO   080
0082:  DECFSZ 00,F
0083:  GOTO   077
0084:  RETURN
.................... #use  I2C(MASTER,SLOW,SDA = PIN_C4, SCL = PIN_C3) 
*
0142:  MOVLW  08
0143:  MOVWF  78
0144:  MOVLW  04
0145:  MOVWF  77
0146:  DECFSZ 77,F
0147:  GOTO   146
0148:  BCF    07.3
0149:  BCF    20.3
014A:  MOVF   20,W
014B:  BSF    03.5
014C:  MOVWF  07
014D:  MOVLW  03
014E:  MOVWF  77
014F:  DECFSZ 77,F
0150:  GOTO   14F
0151:  BCF    03.5
0152:  RLF    2C,F
0153:  BCF    07.4
0154:  BTFSS  03.0
0155:  GOTO   15C
0156:  BSF    20.4
0157:  MOVF   20,W
0158:  BSF    03.5
0159:  MOVWF  07
015A:  GOTO   160
015B:  BCF    03.5
015C:  BCF    20.4
015D:  MOVF   20,W
015E:  BSF    03.5
015F:  MOVWF  07
0160:  NOP
0161:  BCF    03.5
0162:  BSF    20.3
0163:  MOVF   20,W
0164:  BSF    03.5
0165:  MOVWF  07
0166:  BCF    03.5
0167:  BTFSS  07.3
0168:  GOTO   167
0169:  DECFSZ 78,F
016A:  GOTO   144
016B:  MOVLW  04
016C:  MOVWF  77
016D:  DECFSZ 77,F
016E:  GOTO   16D
016F:  BCF    07.3
0170:  BCF    20.3
0171:  MOVF   20,W
0172:  BSF    03.5
0173:  MOVWF  07
0174:  NOP
0175:  BCF    03.5
0176:  BSF    20.4
0177:  MOVF   20,W
0178:  BSF    03.5
0179:  MOVWF  07
017A:  MOVLW  03
017B:  MOVWF  77
017C:  DECFSZ 77,F
017D:  GOTO   17C
017E:  MOVLW  03
017F:  MOVWF  77
0180:  DECFSZ 77,F
0181:  GOTO   180
0182:  BCF    03.5
0183:  BSF    20.3
0184:  MOVF   20,W
0185:  BSF    03.5
0186:  MOVWF  07
0187:  BCF    03.5
0188:  BTFSS  07.3
0189:  GOTO   188
018A:  CLRF   78
018B:  MOVLW  03
018C:  MOVWF  77
018D:  DECFSZ 77,F
018E:  GOTO   18D
018F:  BTFSC  07.4
0190:  BSF    78.0
0191:  BCF    07.3
0192:  BCF    20.3
0193:  MOVF   20,W
0194:  BSF    03.5
0195:  MOVWF  07
0196:  BCF    03.5
0197:  BCF    07.4
0198:  BCF    20.4
0199:  MOVF   20,W
019A:  BSF    03.5
019B:  MOVWF  07
019C:  BCF    03.5
019D:  RETURN
*
01FF:  MOVLW  08
0200:  MOVWF  2D
0201:  MOVF   77,W
0202:  MOVWF  2E
0203:  BSF    20.4
0204:  MOVF   20,W
0205:  BSF    03.5
0206:  MOVWF  07
0207:  MOVLW  03
0208:  MOVWF  77
0209:  DECFSZ 77,F
020A:  GOTO   209
020B:  BCF    03.5
020C:  BSF    20.3
020D:  MOVF   20,W
020E:  BSF    03.5
020F:  MOVWF  07
0210:  BCF    03.5
0211:  BTFSS  07.3
0212:  GOTO   211
0213:  BTFSC  07.4
0214:  BSF    03.0
0215:  BTFSS  07.4
0216:  BCF    03.0
0217:  RLF    78,F
0218:  MOVLW  04
0219:  MOVWF  77
021A:  DECFSZ 77,F
021B:  GOTO   21A
021C:  BCF    20.3
021D:  MOVF   20,W
021E:  BSF    03.5
021F:  MOVWF  07
0220:  BCF    03.5
0221:  BCF    07.3
0222:  DECFSZ 2D,F
0223:  GOTO   203
0224:  BSF    20.4
0225:  MOVF   20,W
0226:  BSF    03.5
0227:  MOVWF  07
0228:  MOVLW  03
0229:  MOVWF  77
022A:  DECFSZ 77,F
022B:  GOTO   22A
022C:  BCF    03.5
022D:  BCF    07.4
022E:  MOVF   2E,W
022F:  BTFSC  03.2
0230:  GOTO   236
0231:  BCF    20.4
0232:  MOVF   20,W
0233:  BSF    03.5
0234:  MOVWF  07
0235:  BCF    03.5
0236:  NOP
0237:  BSF    20.3
0238:  MOVF   20,W
0239:  BSF    03.5
023A:  MOVWF  07
023B:  BCF    03.5
023C:  BTFSS  07.3
023D:  GOTO   23C
023E:  MOVLW  04
023F:  MOVWF  77
0240:  DECFSZ 77,F
0241:  GOTO   240
0242:  BCF    07.3
0243:  BCF    20.3
0244:  MOVF   20,W
0245:  BSF    03.5
0246:  MOVWF  07
0247:  MOVLW  03
0248:  MOVWF  77
0249:  DECFSZ 77,F
024A:  GOTO   249
024B:  BCF    03.5
024C:  BCF    07.4
024D:  BCF    20.4
024E:  MOVF   20,W
024F:  BSF    03.5
0250:  MOVWF  07
0251:  BCF    03.5
0252:  RETURN
.................... #include "D:\Chep Cho SV\Thu Vien\TV_PICKIT2_SHIFT_DS13B07_I2C.C" 
.................... #define   GIAY_HTAI      0X00 
.................... #define   PHUT_HTAI      0X50 
.................... #define   GIO_HTAI       0X12 
.................... #define   THU_HTAI       4                
.................... #define   NGAY_HTAI      0X09                     
.................... #define   THANG_HTAI     0X11 
.................... #define   NAM_HTAI       0X16      
.................... #define   MA_DS          0X98 
....................  
.................... #define  ADDR_WR_13B07   0xD0 
.................... #define  ADDR_RD_13B07   0xD1 
.................... #define  ADDR_MEM        0x00 
....................  
.................... SIGNED  CHAR    NAM_DS13,THANG_DS13,NGAY_DS13,THU_DS13,GIO_DS13, 
....................                   PHUT_DS13,GIAY_DS13,MA_DS13,CONTROL_DS13,GIAYTAM; 
....................                                 
.................... void THIET_LAP_THOI_GIAN_HIEN_TAI() 
.................... {     GIAY_DS13   =   GIAY_HTAI;       PHUT_DS13  =    PHUT_HTAI;    
*
012E:  CLRF   27
012F:  MOVLW  50
0130:  MOVWF  26
....................       GIO_DS13    =   GIO_HTAI;        THU_DS13   =    THU_HTAI; 
0131:  MOVLW  12
0132:  MOVWF  25
0133:  MOVLW  04
0134:  MOVWF  24
....................       NGAY_DS13   =   NGAY_HTAI;       THANG_DS13 =    THANG_HTAI;    
0135:  MOVLW  09
0136:  MOVWF  23
0137:  MOVLW  11
0138:  MOVWF  22
....................       NAM_DS13    =   NAM_HTAI;    
0139:  MOVLW  16
013A:  MOVWF  21
....................       CONTROL_DS13 = 0X90;             MA_DS13      =   MA_DS; 
013B:  MOVLW  90
013C:  MOVWF  29
013D:  MOVLW  98
013E:  MOVWF  28
013F:  BCF    0A.3
0140:  BCF    0A.4
0141:  GOTO   338 (RETURN)
.................... } 
....................   
.................... void NAP_THOI_GIAN_HTAI_VAO_DS13B07() 
.................... {     I2C_START();          
*
019E:  BSF    20.4
019F:  MOVF   20,W
01A0:  BSF    03.5
01A1:  MOVWF  07
01A2:  MOVLW  04
01A3:  MOVWF  77
01A4:  DECFSZ 77,F
01A5:  GOTO   1A4
01A6:  BCF    03.5
01A7:  BSF    20.3
01A8:  MOVF   20,W
01A9:  BSF    03.5
01AA:  MOVWF  07
01AB:  MOVLW  03
01AC:  MOVWF  77
01AD:  DECFSZ 77,F
01AE:  GOTO   1AD
01AF:  BCF    03.5
01B0:  BCF    07.4
01B1:  BCF    20.4
01B2:  MOVF   20,W
01B3:  BSF    03.5
01B4:  MOVWF  07
01B5:  MOVLW  04
01B6:  MOVWF  77
01B7:  DECFSZ 77,F
01B8:  GOTO   1B7
01B9:  BCF    03.5
01BA:  BCF    07.3
01BB:  BCF    20.3
01BC:  MOVF   20,W
01BD:  BSF    03.5
01BE:  MOVWF  07
....................       I2C_WRITE(ADDR_WR_13B07);     
01BF:  MOVLW  D0
01C0:  BCF    03.5
01C1:  MOVWF  2C
01C2:  CALL   142
....................       I2C_WRITE(0X00); 
01C3:  CLRF   2C
01C4:  CALL   142
....................       I2C_WRITE(GIAY_DS13);        I2C_WRITE(PHUT_DS13);       
01C5:  MOVF   27,W
01C6:  MOVWF  2C
01C7:  CALL   142
01C8:  MOVF   26,W
01C9:  MOVWF  2C
01CA:  CALL   142
....................       I2C_WRITE(GIO_DS13);         I2C_WRITE(THU_DS13);       
01CB:  MOVF   25,W
01CC:  MOVWF  2C
01CD:  CALL   142
01CE:  MOVF   24,W
01CF:  MOVWF  2C
01D0:  CALL   142
....................       I2C_WRITE(NGAY_DS13);        I2C_WRITE(THANG_DS13);             
01D1:  MOVF   23,W
01D2:  MOVWF  2C
01D3:  CALL   142
01D4:  MOVF   22,W
01D5:  MOVWF  2C
01D6:  CALL   142
....................       I2C_WRITE(NAM_DS13);         I2C_WRITE(CONTROL_DS13);    
01D7:  MOVF   21,W
01D8:  MOVWF  2C
01D9:  CALL   142
01DA:  MOVF   29,W
01DB:  MOVWF  2C
01DC:  CALL   142
....................       I2C_WRITE(MA_DS13); 
01DD:  MOVF   28,W
01DE:  MOVWF  2C
01DF:  CALL   142
....................       I2C_STOP(); 
01E0:  BCF    20.4
01E1:  MOVF   20,W
01E2:  BSF    03.5
01E3:  MOVWF  07
01E4:  NOP
01E5:  BCF    03.5
01E6:  BSF    20.3
01E7:  MOVF   20,W
01E8:  BSF    03.5
01E9:  MOVWF  07
01EA:  BCF    03.5
01EB:  BTFSS  07.3
01EC:  GOTO   1EB
01ED:  MOVLW  04
01EE:  MOVWF  77
01EF:  DECFSZ 77,F
01F0:  GOTO   1EF
01F1:  GOTO   1F2
01F2:  NOP
01F3:  BSF    20.4
01F4:  MOVF   20,W
01F5:  BSF    03.5
01F6:  MOVWF  07
01F7:  MOVLW  04
01F8:  MOVWF  77
01F9:  DECFSZ 77,F
01FA:  GOTO   1F9
01FB:  BCF    03.5
01FC:  BCF    0A.3
01FD:  BCF    0A.4
01FE:  GOTO   339 (RETURN)
.................... } 
....................      
.................... void DOC_THOI_GIAN_TU_REALTIME() 
.................... {    
....................       I2C_START(); 
*
0253:  BSF    20.4
0254:  MOVF   20,W
0255:  BSF    03.5
0256:  MOVWF  07
0257:  MOVLW  04
0258:  MOVWF  77
0259:  DECFSZ 77,F
025A:  GOTO   259
025B:  BCF    03.5
025C:  BSF    20.3
025D:  MOVF   20,W
025E:  BSF    03.5
025F:  MOVWF  07
0260:  MOVLW  03
0261:  MOVWF  77
0262:  DECFSZ 77,F
0263:  GOTO   262
0264:  BCF    03.5
0265:  BCF    07.4
0266:  BCF    20.4
0267:  MOVF   20,W
0268:  BSF    03.5
0269:  MOVWF  07
026A:  MOVLW  04
026B:  MOVWF  77
026C:  DECFSZ 77,F
026D:  GOTO   26C
026E:  BCF    03.5
026F:  BCF    07.3
0270:  BCF    20.3
0271:  MOVF   20,W
0272:  BSF    03.5
0273:  MOVWF  07
....................       I2C_WRITE(ADDR_WR_13B07); 
0274:  MOVLW  D0
0275:  BCF    03.5
0276:  MOVWF  2C
0277:  CALL   142
....................       I2C_WRITE(ADDR_MEM);                      
0278:  CLRF   2C
0279:  CALL   142
....................       I2C_START();                 
027A:  BSF    20.4
027B:  MOVF   20,W
027C:  BSF    03.5
027D:  MOVWF  07
027E:  MOVLW  04
027F:  MOVWF  77
0280:  DECFSZ 77,F
0281:  GOTO   280
0282:  BCF    03.5
0283:  BSF    20.3
0284:  MOVF   20,W
0285:  BSF    03.5
0286:  MOVWF  07
0287:  MOVLW  03
0288:  MOVWF  77
0289:  DECFSZ 77,F
028A:  GOTO   289
028B:  BCF    03.5
028C:  BTFSS  07.3
028D:  GOTO   28C
028E:  BCF    07.4
028F:  BCF    20.4
0290:  MOVF   20,W
0291:  BSF    03.5
0292:  MOVWF  07
0293:  MOVLW  04
0294:  MOVWF  77
0295:  DECFSZ 77,F
0296:  GOTO   295
0297:  BCF    03.5
0298:  BCF    07.3
0299:  BCF    20.3
029A:  MOVF   20,W
029B:  BSF    03.5
029C:  MOVWF  07
....................                  
....................       I2C_WRITE(ADDR_RD_13B07); 
029D:  MOVLW  D1
029E:  BCF    03.5
029F:  MOVWF  2C
02A0:  CALL   142
....................       GIAY_DS13      =  I2C_READ();               
02A1:  MOVLW  01
02A2:  MOVWF  77
02A3:  CALL   1FF
02A4:  MOVF   78,W
02A5:  MOVWF  27
....................       PHUT_DS13      =  I2C_READ();              
02A6:  MOVLW  01
02A7:  MOVWF  77
02A8:  CALL   1FF
02A9:  MOVF   78,W
02AA:  MOVWF  26
....................       GIO_DS13       =  I2C_READ();              
02AB:  MOVLW  01
02AC:  MOVWF  77
02AD:  CALL   1FF
02AE:  MOVF   78,W
02AF:  MOVWF  25
....................       THU_DS13       =  I2C_READ();  
02B0:  MOVLW  01
02B1:  MOVWF  77
02B2:  CALL   1FF
02B3:  MOVF   78,W
02B4:  MOVWF  24
....................       NGAY_DS13      =  I2C_READ();  
02B5:  MOVLW  01
02B6:  MOVWF  77
02B7:  CALL   1FF
02B8:  MOVF   78,W
02B9:  MOVWF  23
....................       THANG_DS13     =  I2C_READ();  
02BA:  MOVLW  01
02BB:  MOVWF  77
02BC:  CALL   1FF
02BD:  MOVF   78,W
02BE:  MOVWF  22
....................       NAM_DS13       =  I2C_READ();  
02BF:  MOVLW  01
02C0:  MOVWF  77
02C1:  CALL   1FF
02C2:  MOVF   78,W
02C3:  MOVWF  21
....................       CONTROL_DS13   =  I2C_READ();           
02C4:  MOVLW  01
02C5:  MOVWF  77
02C6:  CALL   1FF
02C7:  MOVF   78,W
02C8:  MOVWF  29
....................       MA_DS13        =  I2C_READ(0);     //NOT ACK 
02C9:  CLRF   77
02CA:  CALL   1FF
02CB:  MOVF   78,W
02CC:  MOVWF  28
....................       I2C_STOP(); 
02CD:  BCF    20.4
02CE:  MOVF   20,W
02CF:  BSF    03.5
02D0:  MOVWF  07
02D1:  NOP
02D2:  BCF    03.5
02D3:  BSF    20.3
02D4:  MOVF   20,W
02D5:  BSF    03.5
02D6:  MOVWF  07
02D7:  BCF    03.5
02D8:  BTFSS  07.3
02D9:  GOTO   2D8
02DA:  MOVLW  04
02DB:  MOVWF  77
02DC:  DECFSZ 77,F
02DD:  GOTO   2DC
02DE:  GOTO   2DF
02DF:  NOP
02E0:  BSF    20.4
02E1:  MOVF   20,W
02E2:  BSF    03.5
02E3:  MOVWF  07
02E4:  MOVLW  04
02E5:  MOVWF  77
02E6:  DECFSZ 77,F
02E7:  GOTO   2E6
02E8:  BCF    03.5
02E9:  BCF    0A.3
02EA:  BCF    0A.4
02EB:  GOTO   341 (RETURN)
.................... }     
....................  
....................     
.................... void DOC_GIAY_TU_REALTIME() 
.................... {    
....................       I2C_START(); 
....................       I2C_WRITE(ADDR_WR_13B07); 
....................       I2C_WRITE(ADDR_MEM);                      
....................       I2C_START();                 
....................                  
....................       I2C_WRITE(ADDR_RD_13B07); 
....................       GIAY_DS13      =  I2C_READ(0);               
....................       I2C_STOP(); 
.................... }   
....................          
....................  /* 
.................... void HIEN_THI_THOI_GIAN_DS13B07 ( ) 
.................... {     LCD_COMMAND (0x8C);    
....................       LCD_DATA(GIO_DS13/16  +0X30);    LCD_DATA(GIO_DS13%16  +0X30); 
....................       LCD_DATA(' '); 
....................       LCD_DATA(PHUT_DS13/16 +0X30);    LCD_DATA(PHUT_DS13%16 +0X30); 
....................       LCD_DATA(' '); 
....................       LCD_DATA(GIAY_DS13/16 +0X30);    LCD_DATA(GIAY_DS13%16 +0X30); 
....................       LCD_COMMAND (0xCC);   
....................       LCD_DATA(NGAY_DS13/16 +0X30);    LCD_DATA(NGAY_DS13%16 +0X30); 
....................       LCD_DATA(' '); 
....................       LCD_DATA(THANG_DS13/16 +0X30);   LCD_DATA(THANG_DS13%16 +0X30); 
....................       LCD_DATA(' '); 
....................       LCD_DATA(NAM_DS13/16 +0X30);     LCD_DATA(NAM_DS13%16 +0X30);  
.................... } 
....................  
.................... */ 
....................  
.................... #include "D:\DoAn1\LCD.c" 
.................... #define lcd_rs pin_e0 
.................... #define lcd_rw pin_e1 
.................... #define lcd_e pin_e2 
.................... #define output_lcd output_d 
.................... #define lcd_function_set 0x38 
.................... #define lcd_display_control 0x0f 
.................... #define lcd_clear_display 0x01 
.................... #define lcd_entry_mode 0x06 
.................... #DEFINE LCD_ADDR_LINE1         0X80 
.................... #DEFINE LCD_ADDR_LINE2         0XC0 
.................... #DEFINE LCD_ADDR_LINE3         0X94 
.................... #DEFINE LCD_ADDR_LINE4         0XD4 
....................  
.................... CONST UNSIGNED CHAR LCD_MA_8DOAN[] = { 
....................    0x07,0x0F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,  //DOAN F - 0 
....................    0x1F,0x1F,0x1F,0X00,0X00,0X00,0X00,0X00,  //DOAN A - 1 
....................    0x1C,0x1E,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,  //DOAN B - 2 
....................    0X00,0X00,0X00,0X00,0X00,0x1F,0x1F,0x1F,  //DOAN D - 3 
....................    0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1E,0x1C,  //DOAN C - 4 
....................    0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x0F,0x07,  //DOAN E - 5 
....................    0x1F,0x1F,0x1F,0X00,0X00,0X00,0x1F,0x1F,  //DOAN G+D-6  
....................    0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F,0x1F}; //DOAN I  -7 
....................     
.................... CONST UNSIGNED CHAR LCD_SO_X[11][6] ={ 
....................                   0,1,2,5,3,4,               // SO 0 
....................                   1,2,32,3,7,3,              // SO 1 
....................                   6,6,2,5,3,3,               // SO 2 
....................                   6,6,2,3,3,4,               // SO 3 
....................                   7,3,7,32,32,7,             // SO 4 
....................                   7,6,6,3,3,4,               // SO 5 
....................                   0,6,6,5,3,4,               // SO 6 
....................                   1,1,7,32,32,7,             // SO 7 
....................                   0,6,2,5,3,4,               // SO 8 
....................                   0,6,2,3,3,4 
....................                   32,32,32,32,32,32 
....................                   };             // SO 9 
....................  
.................... void lcd_out(unsigned char *x) 
.................... { 
....................   
....................       output_lcd(x); 
*
0050:  BSF    03.5
0051:  CLRF   08
0052:  BCF    03.5
0053:  MOVF   34,W
0054:  MOVWF  08
....................       output_high(lcd_e); delay_us(10); 
0055:  BSF    03.5
0056:  BCF    09.2
0057:  BCF    03.5
0058:  BSF    09.2
0059:  MOVLW  10
005A:  MOVWF  77
005B:  DECFSZ 77,F
005C:  GOTO   05B
005D:  NOP
....................       output_low(lcd_e); delay_us(30); 
005E:  BSF    03.5
005F:  BCF    09.2
0060:  BCF    03.5
0061:  BCF    09.2
0062:  MOVLW  31
0063:  MOVWF  77
0064:  DECFSZ 77,F
0065:  GOTO   064
0066:  GOTO   067
0067:  RETURN
....................        
.................... } 
.................... void lcd_command(unsigned char mdk) 
.................... { 
....................    output_low(lcd_rs); 
0068:  BSF    03.5
0069:  BCF    09.0
006A:  BCF    03.5
006B:  BCF    09.0
....................    lcd_out(mdk); 
006C:  CLRF   35
006D:  MOVF   33,W
006E:  MOVWF  34
006F:  CALL   050
0070:  RETURN
.................... } 
.................... void lcd_clear() 
.................... { 
....................    lcd_command(0x01);delay_ms(2); 
*
00BB:  MOVLW  01
00BC:  MOVWF  33
00BD:  CALL   068
00BE:  MOVLW  02
00BF:  MOVWF  2D
00C0:  CALL   071
00C1:  BCF    0A.3
00C2:  BCF    0A.4
00C3:  GOTO   321 (RETURN)
.................... } 
.................... void lcd_data(unsigned char mht) 
.................... { 
....................     
....................    output_high(lcd_rs); 
*
0085:  BSF    03.5
0086:  BCF    09.0
0087:  BCF    03.5
0088:  BSF    09.0
....................    lcd_out(mht); 
0089:  CLRF   35
008A:  MOVF   2F,W
008B:  MOVWF  34
008C:  CALL   050
008D:  RETURN
.................... } 
....................  
.................... void lcd_goto_xy(signed int8 x, signed int8 y) 
.................... { 
....................    unsigned int8 lcd_vitri[] ={0X80, 0XC0,0X94, 0XD4}; 
*
011A:  MOVLW  80
011B:  MOVWF  2E
011C:  MOVLW  C0
011D:  MOVWF  2F
011E:  MOVLW  94
011F:  MOVWF  30
0120:  MOVLW  D4
0121:  MOVWF  31
....................    lcd_command(lcd_vitri[x]+y); 
0122:  MOVLW  2E
0123:  ADDWF  2C,W
0124:  MOVWF  04
0125:  BCF    03.7
0126:  MOVF   2D,W
0127:  ADDWF  00,W
0128:  MOVWF  32
0129:  MOVWF  33
012A:  CALL   068
012B:  BCF    0A.3
012C:  BCF    0A.4
012D:  GOTO   330 (RETURN)
.................... } 
....................  void sl(int8 so, int8 x, int8 y) 
.................... { 
....................       int8 n; 
....................       LCD_GOTO_XY(X,Y); 
....................       for(n=0;n<6;n++) 
....................       { 
....................             if(n==3) LCD_GOTO_XY(X+1,Y); 
....................             LCD_DATA(LCD_SO_X[so][n]);        
....................       } 
.................... } 
.................... void lcd_setup() 
.................... { 
....................    unsigned int8 n; 
....................    output_low(lcd_e); 
*
008E:  BSF    03.5
008F:  BCF    09.2
0090:  BCF    03.5
0091:  BCF    09.2
....................    output_low(lcd_rs); 
0092:  BSF    03.5
0093:  BCF    09.0
0094:  BCF    03.5
0095:  BCF    09.0
....................    output_low(lcd_rw); 
0096:  BSF    03.5
0097:  BCF    09.1
0098:  BCF    03.5
0099:  BCF    09.1
....................    lcd_command(lcd_function_set); 
009A:  MOVLW  38
009B:  MOVWF  33
009C:  CALL   068
....................    lcd_command(lcd_display_control); 
009D:  MOVLW  0F
009E:  MOVWF  33
009F:  CALL   068
....................    lcd_command(lcd_clear_display); 
00A0:  MOVLW  01
00A1:  MOVWF  33
00A2:  CALL   068
....................    delay_ms(2); 
00A3:  MOVLW  02
00A4:  MOVWF  2D
00A5:  CALL   071
....................    lcd_command(lcd_entry_mode); 
00A6:  MOVLW  06
00A7:  MOVWF  33
00A8:  CALL   068
....................    LCD_COMMAND(0x40); // di chhuyen den cgram 
00A9:  MOVLW  40
00AA:  MOVWF  33
00AB:  CALL   068
....................    for(n=0;n<64;n++)LCD_DATA(LCD_MA_8DOAN[n]); 
00AC:  CLRF   2C
00AD:  MOVF   2C,W
00AE:  SUBLW  3F
00AF:  BTFSS  03.0
00B0:  GOTO   0B8
00B1:  MOVF   2C,W
00B2:  CALL   004
00B3:  MOVWF  2D
00B4:  MOVWF  2F
00B5:  CALL   085
00B6:  INCF   2C,F
00B7:  GOTO   0AD
00B8:  BCF    0A.3
00B9:  BCF    0A.4
00BA:  GOTO   320 (RETURN)
.................... } 
....................  
....................  
.................... UNSIGNED INT KEY_NHAN() 
.................... {     SIGNED INT8  MAQUETCOT,MAPHIM,HANG,COT; 
....................       MAQUETCOT = 0B11111110;   MAPHIM=HANG=0XFF; 
....................       FOR(COT=0;COT<4;COT++) 
....................          {    
....................             OUTPUT_B(MAQUETCOT);  MAQUETCOT  = (MAQUETCOT<<1) + 0x1; 
....................             IF         (!INPUT(PIN_B4))      {HANG=0;   BREAK;} 
....................             ELSE    IF (!INPUT(PIN_B5))      {HANG=1;   BREAK;} 
....................             ELSE    IF (!INPUT(PIN_B6))      {HANG=2;   BREAK;} 
....................             ELSE    IF (!INPUT(PIN_B7))      {HANG=3;   BREAK;} 
....................            
....................          }           
....................       IF (HANG!=0XFF)   MAPHIM   = COT*4 + HANG; 
....................       RETURN(MAPHIM); 
....................   } 
....................  
.................... void main() 
*
0311:  MOVF   03,W
0312:  ANDLW  1F
0313:  MOVWF  03
0314:  MOVLW  FF
0315:  MOVWF  20
0316:  BSF    03.5
0317:  BSF    1F.0
0318:  BSF    1F.1
0319:  BSF    1F.2
031A:  BCF    1F.3
031B:  MOVLW  07
031C:  MOVWF  1C
031D:  BCF    03.7
.................... { 
....................    lcd_setup(); 
031E:  BCF    03.5
031F:  GOTO   08E
....................    lcd_clear(); 
0320:  GOTO   0BB
....................    
....................    port_b_pullups (0b11111111); 
0321:  BSF    03.5
0322:  BCF    01.7
....................    //write_eeprom(0,'1'); 
....................    lcd_data("sinh"); 
0323:  MOVLW  48
0324:  BCF    03.5
0325:  BSF    03.6
0326:  MOVWF  0D
0327:  MOVLW  00
0328:  MOVWF  0F
0329:  BCF    03.6
032A:  CALL   0C4
....................    lcd_goto_xy(2,3); 
032B:  MOVLW  02
032C:  MOVWF  2C
032D:  MOVLW  03
032E:  MOVWF  2D
032F:  GOTO   11A
....................    lcd_data("ha"); 
0330:  MOVLW  4B
0331:  BSF    03.6
0332:  MOVWF  0D
0333:  MOVLW  00
0334:  MOVWF  0F
0335:  BCF    03.6
0336:  CALL   0C4
....................    unsigned int8 key; 
....................    THIET_LAP_THOI_GIAN_HIEN_TAI(); 
0337:  GOTO   12E
....................    NAP_THOI_GIAN_HTAI_VAO_DS13B07(); 
0338:  GOTO   19E
....................    lcd_data("dsad"); 
0339:  MOVLW  4D
033A:  BSF    03.6
033B:  MOVWF  0D
033C:  MOVLW  00
033D:  MOVWF  0F
033E:  BCF    03.6
033F:  CALL   0C4
....................    while(true) 
....................    { 
....................         
....................       DOC_THOI_GIAN_TU_REALTIME(); 
0340:  GOTO   253
....................       LCD_COMMAND (0x8C);    
0341:  MOVLW  8C
0342:  MOVWF  33
0343:  CALL   068
....................       LCD_DATA(GIO_DS13/16  +0X30);    LCD_DATA(GIO_DS13%16  +0X30); 
0344:  MOVF   25,W
0345:  MOVWF  2C
0346:  MOVLW  10
0347:  MOVWF  2D
0348:  CALL   2EC
0349:  MOVLW  30
034A:  ADDWF  78,W
034B:  MOVWF  2C
034C:  MOVWF  2F
034D:  CALL   085
034E:  MOVF   25,W
034F:  MOVWF  2C
0350:  MOVLW  10
0351:  MOVWF  2D
0352:  CALL   2EC
0353:  MOVLW  30
0354:  ADDWF  77,W
0355:  MOVWF  2C
0356:  MOVWF  2F
0357:  CALL   085
....................       LCD_DATA(' '); 
0358:  MOVLW  20
0359:  MOVWF  2F
035A:  CALL   085
....................       LCD_DATA(PHUT_DS13/16 +0X30);    LCD_DATA(PHUT_DS13%16 +0X30); 
035B:  MOVF   26,W
035C:  MOVWF  2C
035D:  MOVLW  10
035E:  MOVWF  2D
035F:  CALL   2EC
0360:  MOVLW  30
0361:  ADDWF  78,W
0362:  MOVWF  2C
0363:  MOVWF  2F
0364:  CALL   085
0365:  MOVF   26,W
0366:  MOVWF  2C
0367:  MOVLW  10
0368:  MOVWF  2D
0369:  CALL   2EC
036A:  MOVLW  30
036B:  ADDWF  77,W
036C:  MOVWF  2C
036D:  MOVWF  2F
036E:  CALL   085
....................       LCD_DATA(' '); 
036F:  MOVLW  20
0370:  MOVWF  2F
0371:  CALL   085
....................       LCD_DATA(GIAY_DS13/16 +0X30);    LCD_DATA(GIAY_DS13%16 +0X30); 
0372:  MOVF   27,W
0373:  MOVWF  2C
0374:  MOVLW  10
0375:  MOVWF  2D
0376:  CALL   2EC
0377:  MOVLW  30
0378:  ADDWF  78,W
0379:  MOVWF  2C
037A:  MOVWF  2F
037B:  CALL   085
037C:  MOVF   27,W
037D:  MOVWF  2C
037E:  MOVLW  10
037F:  MOVWF  2D
0380:  CALL   2EC
0381:  MOVLW  30
0382:  ADDWF  77,W
0383:  MOVWF  2C
0384:  MOVWF  2F
0385:  CALL   085
....................       LCD_COMMAND (0xCC);   
0386:  MOVLW  CC
0387:  MOVWF  33
0388:  CALL   068
....................       LCD_DATA(NGAY_DS13/16 +0X30);    LCD_DATA(NGAY_DS13%16 +0X30); 
0389:  MOVF   23,W
038A:  MOVWF  2C
038B:  MOVLW  10
038C:  MOVWF  2D
038D:  CALL   2EC
038E:  MOVLW  30
038F:  ADDWF  78,W
0390:  MOVWF  2C
0391:  MOVWF  2F
0392:  CALL   085
0393:  MOVF   23,W
0394:  MOVWF  2C
0395:  MOVLW  10
0396:  MOVWF  2D
0397:  CALL   2EC
0398:  MOVLW  30
0399:  ADDWF  77,W
039A:  MOVWF  2C
039B:  MOVWF  2F
039C:  CALL   085
....................       LCD_DATA(' '); 
039D:  MOVLW  20
039E:  MOVWF  2F
039F:  CALL   085
....................       LCD_DATA(THANG_DS13/16 +0X30);   LCD_DATA(THANG_DS13%16 +0X30); 
03A0:  MOVF   22,W
03A1:  MOVWF  2C
03A2:  MOVLW  10
03A3:  MOVWF  2D
03A4:  CALL   2EC
03A5:  MOVLW  30
03A6:  ADDWF  78,W
03A7:  MOVWF  2C
03A8:  MOVWF  2F
03A9:  CALL   085
03AA:  MOVF   22,W
03AB:  MOVWF  2C
03AC:  MOVLW  10
03AD:  MOVWF  2D
03AE:  CALL   2EC
03AF:  MOVLW  30
03B0:  ADDWF  77,W
03B1:  MOVWF  2C
03B2:  MOVWF  2F
03B3:  CALL   085
....................       LCD_DATA(' '); 
03B4:  MOVLW  20
03B5:  MOVWF  2F
03B6:  CALL   085
....................       LCD_DATA(NAM_DS13/16 +0X30);     LCD_DATA(NAM_DS13%16 +0X30);  
03B7:  MOVF   21,W
03B8:  MOVWF  2C
03B9:  MOVLW  10
03BA:  MOVWF  2D
03BB:  CALL   2EC
03BC:  MOVLW  30
03BD:  ADDWF  78,W
03BE:  MOVWF  2C
03BF:  MOVWF  2F
03C0:  CALL   085
03C1:  MOVF   21,W
03C2:  MOVWF  2C
03C3:  MOVLW  10
03C4:  MOVWF  2D
03C5:  CALL   2EC
03C6:  MOVLW  30
03C7:  ADDWF  77,W
03C8:  MOVWF  2C
03C9:  MOVWF  2F
03CA:  CALL   085
03CB:  GOTO   340
....................    } 
....................  
.................... } 
03CC:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
